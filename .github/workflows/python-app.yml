# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  #    - name: Test with pytest
  #      run: |
  #        pytest
  deploy:
    name: Deploy to shinyapps
    needs: build

    # allow skipping deployment for commits containing '[automated]' or '[no-deploy]' in the commit message
    if: "!contains(github.event.head_commit.message, '[automated]') && !contains(github.event.head_commit.message, '[no-deploy]')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: ðŸ’Ž Deploy to shinyapps.io
        uses: qwert666/shinyapps-actions@main
        env:
          SHINY_USERNAME: 'hendisantika'
          SHINY_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINY_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
          APP_NAME: 'sales-app'
          APP_DIR: ''
